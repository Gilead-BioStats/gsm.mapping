[{"path":"https://gilead-biostats.github.io/gsm.mapping/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jeremy Wildfire. Author, maintainer. Laura Maxwell. Author. Zelos Zhu. Author. Gilead Sciences. Copyright holder.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wildfire J, Maxwell L, Zhu Z (2024). gsm.mapping: Good Statistical Monitoring Mapping. R package version 0.0.1, https://gilead-biostats.github.io/gsm.mapping, https://github.com/Gilead-BioStats/gsm.mapping.","code":"@Manual{,   title = {gsm.mapping: Good Statistical Monitoring Mapping},   author = {Jeremy Wildfire and Laura Maxwell and Zelos Zhu},   year = {2024},   note = {R package version 0.0.1, https://gilead-biostats.github.io/gsm.mapping},   url = {https://github.com/Gilead-BioStats/gsm.mapping}, }"},{"path":"https://gilead-biostats.github.io/gsm.mapping/index.html","id":"gsmmapping","dir":"","previous_headings":"","what":"Good Statistical Monitoring Mapping","title":"Good Statistical Monitoring Mapping","text":"Data mapping framework {gsm}","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/ApplySpec.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Data Specification — ApplySpec","title":"Apply Data Specification — ApplySpec","text":"Apply column specification data frame. column specification named list names target column names values lists column specifications. column specifications can include: type: data type convert column . source_col: name source column map target column.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/ApplySpec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Data Specification — ApplySpec","text":"","code":"ApplySpec(dfSource, columnSpecs, domain)"},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/ApplySpec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Data Specification — ApplySpec","text":"dfSource data.frame Data frame apply column specification . columnSpecs list Column specification. domain character Domain name.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/ApplySpec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Data Specification — ApplySpec","text":"data.frame dfSource column specification applied.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/CheckSpec.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the data and spec are compatible — CheckSpec","title":"Check if the data and spec are compatible — CheckSpec","text":"Check data spec compatible comparing data.frames columns spec data.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/CheckSpec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the data and spec are compatible — CheckSpec","text":"","code":"CheckSpec(lData, lSpec)"},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/CheckSpec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the data and spec are compatible — CheckSpec","text":"lData list data.frames. lSpec list specifying expected structure data.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/CheckSpec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the data and spec are compatible — CheckSpec","text":"function return value. either prints message indicating data.frames columns spec present data, throws error data.frame column missing.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/CheckSpec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the data and spec are compatible — CheckSpec","text":"","code":"lData <- list(reporting_bounds = gsm::reportingBounds, reporting_results = gsm::reportingResults) #> Error in loadNamespace(x): there is no package called ‘gsm’ lSpec <- list(   reporting_bounds = list(     Metric = list(type = \"numeric\"),     Numerator = list(type = \"numeric\"),     LogDenominator = list(type = \"numeric\"),     MetricID = list(type = \"character\")   ),   reporting_results = list(     GroupID = list(type = \"character\"),     GroupLevel = list(type = \"character\"),     Numerator = list(type = \"integer\"),     Denominator = list(type = \"integer\")   ) ) CheckSpec(lData, lSpec) # Prints message that everything is found #> Error: object 'lData' not found  if (FALSE) { # \\dontrun{ lSpec$reporting_groups$NotACol <- list(type = \"character\") CheckSpec(lData, lSpec) # Throws error that NotACol is missing } # }"},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/CombineSpecs.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Multiple Specifications — CombineSpecs","title":"Combine Multiple Specifications — CombineSpecs","text":"function combines multiple domain specifications single specification list, ensuring deduplication columns, resolving conflicts required field, checking type mismatches.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/CombineSpecs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Multiple Specifications — CombineSpecs","text":"","code":"CombineSpecs(lSpecs, bIsWorkflow = TRUE)"},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/CombineSpecs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Multiple Specifications — CombineSpecs","text":"lSpecs list lists, sublist represents either gsm workflow spec object workflow bIsWorkflow lSpecs list workflows? , .$spec extracted. Default: TRUE","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/CombineSpecs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Multiple Specifications — CombineSpecs","text":"list representing combined specifications across domains.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/CombineSpecs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine Multiple Specifications — CombineSpecs","text":"","code":"spec1 <- list(   df1 = list(     col1 = list(type = \"character\"),     col2 = list(type = \"character\")   ),   df2 = list(     col3 = list(type = \"character\"),     col4 = list(type = \"integer\")   ) )  spec2 <- list(   df1 = list(     col1 = list(type = \"character\"),     col5 = list(type = \"character\")   ),   df3 = list(     col6 = list(type = \"character\"),     col7 = list(type = \"character\")   ) )  combined <- CombineSpecs(list(spec1, spec2), bIsWorkflow = FALSE)  mappings <- MakeWorkflowList(strPath = \"workflow/1_mappings\") #> Error in MakeWorkflowList(strPath = \"workflow/1_mappings\"): could not find function \"MakeWorkflowList\" mapping_spec <- CombineSpecs(mappings) #> Error: object 'mappings' not found"},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/Ingest.html","id":null,"dir":"Reference","previous_headings":"","what":"Ingests data from a source based on a given specification. — Ingest","title":"Ingests data from a source based on a given specification. — Ingest","text":"function ingests data source based given specification. iterates domain specification checks columns exist source data. constructs query select columns source calls RunQuery function retrieve data. resulting data frames stored list, data frame corresponds domain specification.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/Ingest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ingests data from a source based on a given specification. — Ingest","text":"","code":"Ingest(lSourceData, lSpec, strDomain = \"Raw\")"},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/Ingest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ingests data from a source based on a given specification. — Ingest","text":"lSourceData list named list source data frames. lSpec list named list column specifications. strDomain character Domain name add data frames ingestions. Default: \"Raw\"","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/Ingest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ingests data from a source based on a given specification. — Ingest","text":"list named list data frames, data frame corresponds domain specification.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/Ingest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ingests data from a source based on a given specification. — Ingest","text":"","code":"lSourceData <- list(   Source_STUDY = clindata::ctms_study,   Source_SITE = clindata::ctms_site,   Source_SUBJ = clindata::rawplus_dm,   Source_AE = clindata::rawplus_ae,   Source_PD = clindata::ctms_protdev,   Source_LB = clindata::rawplus_lb,   Source_STUDCOMP = clindata::rawplus_studcomp,   Source_SDRGCOMP = clindata::rawplus_sdrgcomp,   Source_QUERY = clindata::edc_queries,   Source_DATAENT = clindata::edc_data_pages,   Source_DATACHG = clindata::edc_data_points,   Source_ENROLL = clindata::rawplus_enroll ) #> Error in loadNamespace(x): there is no package called ‘clindata’  lIngestWorkflow <- MakeWorkflowList(strPath = \"workflow/1_mappings\")[[1]] #> Error in MakeWorkflowList(strPath = \"workflow/1_mappings\"): could not find function \"MakeWorkflowList\" lRawData <- Ingest(lSourceData, lIngestWorkflow$spec) #> Error: object 'lSourceData' not found"},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/RunQuery.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a SQL query on a data frame or DuckDB table — RunQuery","title":"Run a SQL query on a data frame or DuckDB table — RunQuery","text":"RunQuery executes SQL query data frame DuckDB lazy table, allowing dynamic use local database-backed data. DuckDB connection passed df, operates existing connection. Otherwise, creates temporary DuckDB table provided data frame SQL processing. SQL query include placeholder df indicate primary data source (df) referenced.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/RunQuery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a SQL query on a data frame or DuckDB table — RunQuery","text":"","code":"RunQuery(strQuery, df)"},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/RunQuery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a SQL query on a data frame or DuckDB table — RunQuery","text":"strQuery character SQL query run, containing placeholders \"df\". df data.frame tbl_dbi data frame DuckDB lazy table use SQL query.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/RunQuery.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a SQL query on a data frame or DuckDB table — RunQuery","text":"data.frame containing results SQL query.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/RunQuery.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a SQL query on a data frame or DuckDB table — RunQuery","text":"","code":"df <- data.frame(   Name = c(\"John\", \"Jane\", \"Bob\"),   Age = c(25, 30, 35),   Salary = c(50000, 60000, 70000) ) query <- \"SELECT * FROM df WHERE AGE > 30\"  result <- RunQuery(query, df) #> Creating a new temporary DuckDB connection. #> Error in (function (cond) .Internal(C_tryCatchHelper(addr, 1L, cond)))(structure(list(message = \"there is no package called ‘duckdb’\",     call = loadNamespace(x), package = \"duckdb\", lib.loc = NULL), class = c(\"packageNotFoundError\", \"error\", \"condition\"))): error in evaluating the argument 'drv' in selecting a method for function 'dbConnect': there is no package called ‘duckdb’"},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/combine_domain.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Domain Specifications — combine_domain","title":"Combine Domain Specifications — combine_domain","text":"function combines multiple column specifications single domain applying deduplication resolving conflicts.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/combine_domain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Domain Specifications — combine_domain","text":"","code":"combine_domain(domain_specs)"},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/combine_domain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Domain Specifications — combine_domain","text":"domain_specs list lists, sublist represents specifications domain across multiple specs.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/combine_domain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Domain Specifications — combine_domain","text":"list representing combined specifications domain.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/gsm.mapping-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gsm.mapping: Good Statistical Monitoring Mapping — gsm.mapping-package","title":"gsm.mapping: Good Statistical Monitoring Mapping — gsm.mapping-package","text":"Good Statistical Monitoring 'gsm' R package provides framework statistical data monitoring. 'gsm.mapping' handles mapping aspects gsm framework.","code":""},{"path":[]},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/gsm.mapping-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gsm.mapping: Good Statistical Monitoring Mapping — gsm.mapping-package","text":"Maintainer: Jeremy Wildfire jwildfire@gmail.com Authors: Laura Maxwell laura.maxwell@atorusresearch.com Zelos Zhu zelos.zhu@atorusresearch.com contributors: Gilead Sciences [copyright holder]","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/update_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Column Specification — update_column","title":"Update Column Specification — update_column","text":"function updates column specification handling deduplication, resolving conflicts required field, checking type mismatches.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/update_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Column Specification — update_column","text":"","code":"update_column(existing_col, new_col, col_name)"},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/update_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Column Specification — update_column","text":"existing_col list representing existing column specification (can NULL column yet exist). new_col list representing new column specification merged existing one.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/reference/update_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Column Specification — update_column","text":"list containing updated column specification.","code":""}]
