[{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/articles/add_new_domain_var.html","id":"step-by-step-instructions-for-submitting-a-request","dir":"Articles","previous_headings":"","what":"Step-by-Step Instructions for Submitting a Request","title":"Requesting New Domains or Variables","text":"guide provides detailed instructions users submit requests adding new domains variables gsm.mapping.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/articles/add_new_domain_var.html","id":"navigate-to-the-github-issues-page","dir":"Articles","previous_headings":"Step-by-Step Instructions for Submitting a Request","what":"1. Navigate to the GitHub Issues Page","title":"Requesting New Domains or Variables","text":"Visit repository’s GitHub page. Click Issues tab located top repository page click green New Issue button. click ","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/articles/add_new_domain_var.html","id":"open-a-new-issue","dir":"Articles","previous_headings":"Step-by-Step Instructions for Submitting a Request","what":"2. Open a New Issue","title":"Requesting New Domains or Variables","text":"Select template labeled “Request New Domain Variable”.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/articles/add_new_domain_var.html","id":"complete-the-request-template","dir":"Articles","previous_headings":"Step-by-Step Instructions for Submitting a Request","what":"3. Complete the Request Template","title":"Requesting New Domains or Variables","text":"Provide detailed clear information ensure request can addressed efficiently. Use following structure:","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/articles/add_new_domain_var.html","id":"a--request-title","dir":"Articles","previous_headings":"Step-by-Step Instructions for Submitting a Request > 3. Complete the Request Template","what":"A. Request Title","title":"Requesting New Domains or Variables","text":"Use format: Request New Domain/Variable: [Domain Name Variable Name]","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/articles/add_new_domain_var.html","id":"b--details-section","dir":"Articles","previous_headings":"Step-by-Step Instructions for Submitting a Request > 3. Complete the Request Template","what":"B. Details Section","title":"Requesting New Domains or Variables","text":"Complete following fields: Provide name domain (e.g., AE Adverse Events, LB Laboratory Tests). domain dependencies domains, please specify . (e.g. COUNTRY domain depends SUBJ domain.) help aid priority/order workflow run. List variable(s) need added (e.g., AESEV Adverse Event Severity). variable original source, provide name source column. Expected Data Type (e.g., Character, Numeric, Date) Explain domain variable important monitoring needs. Include specific use cases possible. Provide example data mock-rows illustrating domain variable look pseudo-SDTM format. Include references regulatory guidance, protocol requirements, study documentation supporting request.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/articles/add_new_domain_var.html","id":"c--additional-context-optional","dir":"Articles","previous_headings":"Step-by-Step Instructions for Submitting a Request > 3. Complete the Request Template","what":"C. Additional Context (Optional)","title":"Requesting New Domains or Variables","text":"Link related issues discussions. Challenges facing without domain variable.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/articles/add_new_domain_var.html","id":"submit-the-issue","dir":"Articles","previous_headings":"Step-by-Step Instructions for Submitting a Request","what":"4. Submit the Issue","title":"Requesting New Domains or Variables","text":"Review request completeness accuracy. Click Submit new issue button.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/articles/add_new_domain_var.html","id":"follow-up-on-the-request","dir":"Articles","previous_headings":"Step-by-Step Instructions for Submitting a Request","what":"5. Follow Up on the Request","title":"Requesting New Domains or Variables","text":"Monitor issue updates comments maintainers. Respond promptly questions requests clarification. Collaborate team needed finalize implementation.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/articles/mapping_spec.html","id":"mapping-workflows","dir":"Articles","previous_headings":"","what":"Mapping Workflows","title":"Mapping Specifications","text":"Currently, exist 13 domains respective workflows require mapping source/raw data: AE COUNTRY DATACHG DATAENT ENROLL LB PD QUERY SDRGCOMP SITE STUDCOMP STUDY SUBJ 13 domains generally map directly 1--1 raw source, except COUNTRY relies dataset SUBJ. following variables/types respective domains REQUIRED source/raw data:","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jeremy Wildfire. Author, maintainer. Laura Maxwell. Author. Zelos Zhu. Author. Gilead Sciences. Copyright holder.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wildfire J, Maxwell L, Zhu Z (2025). gsm.mapping: Good Statistical Monitoring Mapping. R package version 0.0.1, https://gilead-biostats.github.io/gsm.mapping, https://github.com/Gilead-BioStats/gsm.mapping.","code":"@Manual{,   title = {gsm.mapping: Good Statistical Monitoring Mapping},   author = {Jeremy Wildfire and Laura Maxwell and Zelos Zhu},   year = {2025},   note = {R package version 0.0.1, https://gilead-biostats.github.io/gsm.mapping},   url = {https://github.com/Gilead-BioStats/gsm.mapping}, }"},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/index.html","id":"good-statistical-monitoring-mapping-gsmmapping-r-package","dir":"","previous_headings":"","what":"Good Statistical Monitoring Mapping","title":"Good Statistical Monitoring Mapping","text":"{gsm} ecosystem provides standardized Risk Based Quality Monitoring (RBQM) framework clinical trials pairs flexible data pipeline robust reports like one shown .  gsm.mapping package provides necessary functions workflows perform data transformation raw/source datasets appropriate domains. README provides high-level overview {gsm.mapping}; see package website additional details.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/index.html","id":"background","dir":"","previous_headings":"","what":"Background","title":"Good Statistical Monitoring Mapping","text":"Clinical trial data often presents challenges due complexity variability. gsm.mapping framework designed accommodate wide range clinical data sources. Typically, raw data clinical trial databases transformed mapped datasets straightforward transformations. mapped datasets serve inputs analytical pipeline. integrating data Clinical Trial Management System (CTMS), often necessary consolidate transform data various folders sources appropriate “domains.” reporting process, SDTM standards commonly applied ensure compliance, may always align specific requirements RBQM. goal gsm.mapping provide flexible framework mapping data domains tailored support risk assessments trial monitoring. single standardized format raw mapped data within gsm.mapping. requirement mapped data must compatible analytics pipeline. Data transformations can implemented using various methods, including custom R scripts (e.g., dplyr), SQL queries, pre-defined gsm workflows. Pre-defined workflows can found package workflow directory, examples gsm Extensions vignette.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/index.html","id":"process-overview","dir":"","previous_headings":"","what":"Process Overview","title":"Good Statistical Monitoring Mapping","text":"workflow particular mapped domain requires following sections: - Metadata: Describes domain mapping purpose. - spec: Defines structure raw data inputs expected types. - steps: Outlines process transforming raw data mapped output.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/ApplySpec.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Data Specification — ApplySpec","title":"Apply Data Specification — ApplySpec","text":"Apply column specification data frame. column specification named list names target column names values lists column specifications. column specifications can include: type: data type convert column . source_col: name source column map target column.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/ApplySpec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Data Specification — ApplySpec","text":"","code":"ApplySpec(dfSource, columnSpecs, domain)"},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/ApplySpec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Data Specification — ApplySpec","text":"dfSource data.frame Data frame apply column specification . columnSpecs list Column specification. domain character Domain name.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/ApplySpec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Data Specification — ApplySpec","text":"data.frame dfSource column specification applied.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/BindResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to bind results from multiple workflows — BindResults","title":"Helper function to bind results from multiple workflows — BindResults","text":"Used stack results (e.g. dfSummary) list analysis pipeline output formatted like result RunWorkflows(). Also adds study level metadata provided.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/BindResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to bind results from multiple workflows — BindResults","text":"","code":"BindResults(   lAnalysis,   strName,   dSnapshotDate = Sys.Date(),   strStudyID = NULL,   bUselData = FALSE )"},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/BindResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to bind results from multiple workflows — BindResults","text":"lAnalysis Named List analysis results format returned RunWorkflows(). strName Name object stack. Pulled lAnalysis (lAnalysis$lData bUselData TRUE). dSnapshotDate Date snapshot. Default Sys.Date(). strStudyID Study ID. bUselData function bind results lData object (look directly root elements lAnalysis)? Default FALSE.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/BindResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to bind results from multiple workflows — BindResults","text":"data frame.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/CalculatePercentage.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to compile ","title":"Helper function to compile ","text":"Used create percentage values enrollment data, site activation participantment enrollment, pasting together appropriate n/N (xx.x%) value well.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/CalculatePercentage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to compile ","text":"","code":"CalculatePercentage(   data,   strCurrentCol,   strTargetCol,   strPercVal,   strPercStrVal )"},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/CalculatePercentage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to compile ","text":"data input dataframe strCurrentCol Column represents site count participant count strTargetCol Column represents target count site/participants strPercVal Name column contain numeric percentage value enrollment strPercStrVal Name column contain n/N (xx.x%) string","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/CalculatePercentage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to compile ","text":"data frame containing two additional columns precentage value associated string","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/CombineSpecs.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Multiple Specifications — CombineSpecs","title":"Combine Multiple Specifications — CombineSpecs","text":"function combines multiple domain specifications single specification list, ensuring deduplication columns, resolving conflicts required field, checking type mismatches.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/CombineSpecs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Multiple Specifications — CombineSpecs","text":"","code":"CombineSpecs(lSpecs, bIsWorkflow = TRUE)"},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/CombineSpecs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Multiple Specifications — CombineSpecs","text":"lSpecs list lists, sublist represents either gsm workflow spec object workflow bIsWorkflow lSpecs list workflows? , .$spec extracted. Default: TRUE","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/CombineSpecs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Multiple Specifications — CombineSpecs","text":"list representing combined specifications across domains.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/CombineSpecs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine Multiple Specifications — CombineSpecs","text":"","code":"spec1 <- list(   df1 = list(     col1 = list(type = \"character\"),     col2 = list(type = \"character\")   ),   df2 = list(     col3 = list(type = \"character\"),     col4 = list(type = \"integer\")   ) )  spec2 <- list(   df1 = list(     col1 = list(type = \"character\"),     col5 = list(type = \"character\")   ),   df3 = list(     col6 = list(type = \"character\"),     col7 = list(type = \"character\")   ) )  combined <- CombineSpecs(list(spec1, spec2), bIsWorkflow = FALSE)  mappings <- gsm::MakeWorkflowList(strPath = \"workflow/1_mappings\") mapping_spec <- CombineSpecs(mappings)"},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/Ingest.html","id":null,"dir":"Reference","previous_headings":"","what":"Ingests data from a source based on a given specification. — Ingest","title":"Ingests data from a source based on a given specification. — Ingest","text":"function ingests data source based given specification. iterates domain specification checks columns exist source data. constructs query select columns source calls RunQuery function retrieve data. resulting data frames stored list, data frame corresponds domain specification.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/Ingest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ingests data from a source based on a given specification. — Ingest","text":"","code":"Ingest(lSourceData, lSpec, strDomain = \"Raw\")"},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/Ingest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ingests data from a source based on a given specification. — Ingest","text":"lSourceData list named list source data frames. lSpec list named list column specifications. strDomain character Domain name add data frames ingestions. Default: \"Raw\"","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/Ingest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ingests data from a source based on a given specification. — Ingest","text":"list named list data frames, data frame corresponds domain specification.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/Ingest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ingests data from a source based on a given specification. — Ingest","text":"","code":"lSourceData <- list(   Source_STUDY = clindata::ctms_study,   Source_SITE = clindata::ctms_site,   Source_SUBJ = clindata::rawplus_dm,   Source_AE = clindata::rawplus_ae,   Source_PD = clindata::ctms_protdev,   Source_LB = clindata::rawplus_lb,   Source_STUDCOMP = clindata::rawplus_studcomp,   Source_SDRGCOMP = clindata::rawplus_sdrgcomp,   Source_QUERY = clindata::edc_queries,   Source_DATAENT = clindata::edc_data_pages,   Source_DATACHG = clindata::edc_data_points,   Source_ENROLL = clindata::rawplus_enroll )  lIngestWorkflow <- gsm::MakeWorkflowList(strPath = \"workflow/1_mappings\")[[1]] lRawData <- Ingest(lSourceData, lIngestWorkflow$spec) #> ℹ Ingesting data for AE. #> Creating a new temporary DuckDB connection. #> ✔ SQL Query complete: 4854 rows returned. #> Disconnected from temporary DuckDB connection."},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/MakeBounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Bounds for display in scatterplots — MakeBounds","title":"Calculate Bounds for display in scatterplots — MakeBounds","text":"Calculate bounds across set metrics.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/MakeBounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Bounds for display in scatterplots — MakeBounds","text":"","code":"MakeBounds(   dfResults,   dfMetrics,   strMetrics = unique(dfResults$MetricID),   dSnapshotDate = unique(dfResults$SnapshotDate),   strStudyID = unique(dfResults$StudyID) )"},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/MakeBounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Bounds for display in scatterplots — MakeBounds","text":"dfResults data.frame stacked summary analysis pipeline output. Created passing list results returned Summarize() BindResults(). Expected columns: GroupID, GroupLevel, Numerator, Denominator, Metric, Score, Flag, MetricID, StudyID, SnapshotDate. dfMetrics data.frame Metric-specific metadata use charts reporting. Created passing lWorkflow object MakeMetric(). Expected columns: File, MetricID, Group, Abbreviation, Metric, Numerator, Denominator, Model, Score, Threshold. details see Data Model vignette: vignette(\"DataModel\", package = \"gsm\"). strMetrics Character vector MetricIDs include dfBounds. unique values dfResults$MetricID used default. dSnapshotDate Snapshot date. Uses dfResults$SnapshotDate default. one snapshot date found dfResults, warning thrown function returns NULL. strStudyID Study ID. Uses dfResults$StudyID default. one snapshot date found dfResults, warning thrown function returns NULL.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/MakeBounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Bounds for display in scatterplots — MakeBounds","text":"data frame.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/MakeBounds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Bounds for display in scatterplots — MakeBounds","text":"","code":"library(gsm) #>  #> Attaching package: ‘gsm’ #> The following objects are masked from ‘package:gsm.mapping’: #>  #>     ApplySpec, BindResults, CalculatePercentage, CombineSpecs, Ingest, #>     MakeBounds, MakeLongMeta, MakeMetric dfBounds <- MakeBounds(   dfResults = reportingResults,   dfMetrics = reportingMetrics ) #> Creating stacked dfBounds data for strMetrics #> Warning: More than one `dSnapshotDate` found. Returning NULL"},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/MakeLongMeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to compile ","title":"Helper function to compile ","text":"Used create components group metadata dictionary (dfGroups) use charts reports. function takes data frame string specifying group columns, returns long format data frame.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/MakeLongMeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to compile ","text":"","code":"MakeLongMeta(data, strGroupLevel, strGroupCols = \"GroupID\")"},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/MakeLongMeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to compile ","text":"data input data frame. strGroupLevel string specifying group type. strGroupCols string specifying group columns.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/MakeLongMeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to compile ","text":"long format data frame.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/MakeLongMeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to compile ","text":"","code":"df <- data.frame(GroupID = c(1, 2, 3), Param1 = c(10, 20, 30), Param2 = c(100, 200, 300)) MakeLongMeta(df, \"GroupID\") #> # A tibble: 6 × 4 #>   GroupID Param  Value GroupLevel #>   <chr>   <chr>  <chr> <chr>      #> 1 1       Param1 10    GroupID    #> 2 1       Param2 100   GroupID    #> 3 2       Param1 20    GroupID    #> 4 2       Param2 200   GroupID    #> 5 3       Param1 30    GroupID    #> 6 3       Param2 300   GroupID"},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/MakeMetric.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse metadata from workflows to a data frame — MakeMetric","title":"Parse metadata from workflows to a data frame — MakeMetric","text":"Used format metric metadata (dfMetrics) use charts reports. function takes list workflows returns data frame one row per MetricID.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/MakeMetric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse metadata from workflows to a data frame — MakeMetric","text":"","code":"MakeMetric(lWorkflows)"},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/MakeMetric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse metadata from workflows to a data frame — MakeMetric","text":"lWorkflows list workflows, like one returned MakeWorkflowList().","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/MakeMetric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse metadata from workflows to a data frame — MakeMetric","text":"data frame.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/MakeMetric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse metadata from workflows to a data frame — MakeMetric","text":"","code":"library(gsm) lWorkflows <- MakeWorkflowList(strPath = \"workflow/2_metrics\", strNames = \"kri\") dfMetrics <- MakeMetric(lWorkflows)"},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/combine_domain.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Domain Specifications — combine_domain","title":"Combine Domain Specifications — combine_domain","text":"function combines multiple column specifications single domain applying deduplication resolving conflicts.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/combine_domain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Domain Specifications — combine_domain","text":"","code":"combine_domain(domain_specs)"},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/combine_domain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Domain Specifications — combine_domain","text":"domain_specs list lists, sublist represents specifications domain across multiple specs.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/combine_domain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Domain Specifications — combine_domain","text":"list representing combined specifications domain.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/gsm.mapping-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gsm.mapping: Good Statistical Monitoring Mapping — gsm.mapping-package","title":"gsm.mapping: Good Statistical Monitoring Mapping — gsm.mapping-package","text":"Good Statistical Monitoring 'gsm' R package provides framework statistical data monitoring. 'gsm.mapping' handles mapping aspects gsm framework.","code":""},{"path":[]},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/gsm.mapping-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gsm.mapping: Good Statistical Monitoring Mapping — gsm.mapping-package","text":"Maintainer: Jeremy Wildfire jwildfire@gmail.com Authors: Laura Maxwell laura.maxwell@atorusresearch.com Zelos Zhu zelos.zhu@atorusresearch.com contributors: Gilead Sciences [copyright holder]","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/shared-params.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameters used in multiple functions — shared-params","title":"Parameters used in multiple functions — shared-params","text":"Reused parameter definitions gathered easier usage.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/shared-params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameters used in multiple functions — shared-params","text":"dfMetrics data.frame Metric-specific metadata use charts reporting. Created passing lWorkflow object MakeMetric(). Expected columns: File, MetricID, Group, Abbreviation, Metric, Numerator, Denominator, Model, Score, Threshold. details see Data Model vignette: vignette(\"DataModel\", package = \"gsm\"). dfResults data.frame stacked summary analysis pipeline output. Created passing list results returned Summarize() BindResults(). Expected columns: GroupID, GroupLevel, Numerator, Denominator, Metric, Score, Flag, MetricID, StudyID, SnapshotDate. dfBounds data.frame Set predicted percentages/rates upper- lower-bounds across full range sample sizes/total exposure values reporting. Created passing dfResults dfMetrics MakeBounds(). Expected columns: Threshold, Denominator, Numerator, Metric, MetricID, StudyID, SnapshotDate. dfGroups data.frame Group-level metadata dictionary. Created passing CTMS site study data MakeLongMeta(). Expected columns: GroupID, GroupLevel, Param, Value. dfInput data.frame Input data one record per subject. Created passing Raw+ data Input_Rate(). Expected columns: GroupID, GroupLevel, Numerator, Denominator /columns specified strCountCol strGroupCol. lMetric list Metric-specific metadata use charts reporting. Created passing lWorkflow object MakeMetric() turing list. Expected columns: File,MetricID, Group, Abbreviation, Metric, Numerator, Denominator, Model, Score, strThreshold. details see Data Model vignette: vignette(\"DataModel\", package = \"gsm\"). lParamLabels list Labels parameters, parameters names, label value. bDebug logical Print debug messages? Default: FALSE.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/update_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Column Specification — update_column","title":"Update Column Specification — update_column","text":"function updates column specification handling deduplication, resolving conflicts required field, checking type mismatches.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/update_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Column Specification — update_column","text":"","code":"update_column(existing_col, new_col, col_name)"},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/update_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Column Specification — update_column","text":"existing_col list representing existing column specification (can NULL column yet exist). new_col list representing new column specification merged existing one.","code":""},{"path":"https://gilead-biostats.github.io/gsm.mapping/dev/reference/update_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Column Specification — update_column","text":"list containing updated column specification.","code":""}]
